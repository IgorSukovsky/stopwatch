{"version":3,"sources":["utils/Helpers.js","components/Controls.jsx","App.js","index.js"],"names":["setTimeFormat","totalSecs","seconds","minutes","Math","floor","hours","hoursFormat","minutesFormat","secondsFormant","Controls","time","start","stop","reset","wait","className","type","onClick","App","useState","state","setState","setTime","stop$","useMemo","Subject","click$","useCallback","next","useEffect","doubleClick$","pipe","buffer","debounceTime","map","list","length","filter","value","subscribtion$","Observable","observer","count","intervalId","setInterval","clearInterval","takeUntil","subscribe","prev","unsubscribe","ReactDOM","render","document","getElementById"],"mappings":"+NAiBeA,EAjBO,SAACC,GACrB,IAAMC,EAAUD,EAAY,GACtBE,EAAUC,KAAKC,MAAMJ,EAAY,IACjCK,EAAQF,KAAKC,MAAMJ,EAAY,MAC/BM,EACJD,EAAQ,GAAKA,EAAQ,GACjB,KACAA,GAAS,GAAKA,GAAS,EAAvB,WACIA,GADJ,UAEGA,GACHE,EACJL,EAAU,GAAkB,IAAZA,EAAgB,KAAhB,WAA2BA,GAA3C,UAA2DA,GACvDM,EAAiBP,EAAU,GAAV,WAAmBA,GAAnB,UAAkCA,GAEzD,MAAM,GAAN,OAAUK,EAAV,YAAyBC,EAAzB,YAA0CC,I,OCV/BC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,KAA7B,OACtB,qCACE,yBAAQC,UAAU,SAAlB,UACE,oBAAIA,UAAU,qBAAd,uBACA,oBAAIA,UAAU,sBAAd,SAAqChB,EAAcW,QAErD,yBAASK,UAAU,OAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,wBAAQC,KAAK,SAASD,UAAU,iBAAiBE,QAASN,EAA1D,mBAGA,wBAAQK,KAAK,SAASD,UAAU,iBAAiBE,QAASL,EAA1D,kBAGA,wBAAQI,KAAK,SAASD,UAAU,iBAAiBE,QAASJ,EAA1D,mBAGA,wBAAQG,KAAK,SAASD,UAAU,iBAAiBE,QAASH,EAA1D,2BCyDOI,EAxEH,WACV,MAA0BC,mBAAS,QAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,GAAjC,mBAAOT,EAAP,KAAaY,EAAb,KAEMC,EAAQC,mBAAQ,kBAAM,IAAIC,MAAW,IACrCC,EAASF,mBAAQ,kBAAM,IAAIC,MAAW,IAMtCb,EAAOe,uBAAY,WACvBL,EAAQ,GACRD,EAAS,UACR,IAEGR,EAAQc,uBAAY,WACxBL,EAAQ,KACP,IAEGR,EAAOa,uBAAY,WACvBD,EAAOE,OACPP,EAAS,QACTK,EAAOE,SACN,CAACF,IAmCJ,OAjCAG,qBAAU,WACR,IAAMC,EAAeJ,EAAOK,KAC1BC,YAAON,EAAOK,KAAKE,YAAa,OAChCC,aAAI,SAACC,GAAD,OAAUA,EAAKC,UACnBC,aAAO,SAACC,GAAD,OAAWA,GAAS,MAavBC,EAXS,IAAIC,KAAW,SAACC,GAC7B,IAAIC,EAAQ,EACNC,EAAaC,aAAY,WAC7BH,EAASb,KAAMc,GAAS,KACvB,KAEH,OAAO,WACLG,cAAcF,OAKfZ,KAAKe,YAAUhB,IACfC,KAAKe,YAAUvB,IACfwB,UAAU,CACTnB,KAAM,WACU,UAAVR,GACFE,GAAQ,SAAC0B,GAAD,OAAUA,EAAO,QAKjC,OAAO,WACLT,EAAcU,iBAEf,CAACvB,EAAQN,EAAOG,IAGjB,yBAASR,UAAU,YAAnB,SACE,cAAC,EAAD,CACEL,KAAMA,EACNC,MAxDQ,WACZU,EAAS,UAwDLT,KAAMA,EACNC,MAAOA,EACPC,KAAMA,OClEdoC,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.96d55acc.chunk.js","sourcesContent":["const setTimeFormat = (totalSecs) => {\r\n  const seconds = totalSecs % 60;\r\n  const minutes = Math.floor(totalSecs / 60);\r\n  const hours = Math.floor(totalSecs / 3600);\r\n  const hoursFormat =\r\n    hours < 1 || hours > 23\r\n      ? \"00\"\r\n      : hours >= 1 && hours <= 9\r\n      ? `0${hours}`\r\n      : `${hours}`;\r\n  const minutesFormat =\r\n    minutes < 10 ? (minutes === 0 ? \"00\" : `0${minutes}`) : `${minutes}`;\r\n  const secondsFormant = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n\r\n  return `${hoursFormat}:${minutesFormat}:${secondsFormant}`;\r\n};\r\n\r\nexport default setTimeFormat;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport setTimeFormat from \"../utils/Helpers\";\r\n\r\nexport const Controls = ({ time, start, stop, reset, wait }) => (\r\n  <>\r\n    <header className=\"header\">\r\n      <h1 className=\"stopwatch headline\">StopWatch</h1>\r\n      <h1 className=\"stopwatch indicator\">{setTimeFormat(time)}</h1>\r\n    </header>\r\n    <section className=\"main\">\r\n      <div className=\"container\">\r\n        <button type=\"button\" className=\"button is-dark\" onClick={start}>\r\n          Start\r\n        </button>\r\n        <button type=\"button\" className=\"button is-dark\" onClick={stop}>\r\n          Stop\r\n        </button>\r\n        <button type=\"button\" className=\"button is-dark\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n        <button type=\"button\" className=\"button is-dark\" onClick={wait}>\r\n          Wait\r\n        </button>\r\n      </div>\r\n    </section>\r\n  </>\r\n);\r\n\r\nControls.propTypes = {\r\n  time: PropTypes.number.isRequired,\r\n  start: PropTypes.func.isRequired,\r\n  stop: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n  wait: PropTypes.func.isRequired,\r\n};\r\n","import React, { useCallback, useEffect, useState, useMemo } from \"react\";\nimport { Observable, Subject } from \"rxjs\";\nimport { map, buffer, debounceTime, filter, takeUntil } from \"rxjs/operators\";\n\nimport { Controls } from \"./components/Controls\";\n\nconst App = () => {\n  const [state, setState] = useState(\"stop\");\n  const [time, setTime] = useState(0);\n\n  const stop$ = useMemo(() => new Subject(), []);\n  const click$ = useMemo(() => new Subject(), []);\n\n  const start = () => {\n    setState(\"start\");\n  };\n\n  const stop = useCallback(() => {\n    setTime(0);\n    setState(\"stop\");\n  }, []);\n\n  const reset = useCallback(() => {\n    setTime(0);\n  }, []);\n\n  const wait = useCallback(() => {\n    click$.next();\n    setState(\"wait\");\n    click$.next();\n  }, [click$]);\n\n  useEffect(() => {\n    const doubleClick$ = click$.pipe(\n      buffer(click$.pipe(debounceTime(300))),\n      map((list) => list.length),\n      filter((value) => value >= 2)\n    );\n    const timer$ = new Observable((observer) => {\n      let count = 0;\n      const intervalId = setInterval(() => {\n        observer.next((count += 1));\n      }, 1000);\n\n      return () => {\n        clearInterval(intervalId);\n      };\n    });\n\n    const subscribtion$ = timer$\n      .pipe(takeUntil(doubleClick$))\n      .pipe(takeUntil(stop$))\n      .subscribe({\n        next: () => {\n          if (state === \"start\") {\n            setTime((prev) => prev + 1);\n          }\n        },\n      });\n\n    return () => {\n      subscribtion$.unsubscribe();\n    };\n  }, [click$, state, stop$]);\n\n  return (\n    <section className=\"stopwatch\">\n      <Controls\n        time={time}\n        start={start}\n        stop={stop}\n        reset={reset}\n        wait={wait}\n      />\n    </section>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/styles.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}