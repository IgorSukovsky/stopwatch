{"version":3,"sources":["App.js","index.js"],"names":["getFormattedTime","sec","hh","Math","floor","slice","remainderM","mm","ss","App","startBtn","React","useRef","pauseBtn","stopBtn","resetBtn","useState","counter","setCounter","isCounting","setIsCounting","useEffect","start$","fromEvent","current","pipe","mapTo","newIsCounting","stop$","newCounter","pause$","throttle","_","interval","reset$","merge","startWith","scan","state","curr","tap","switchMap","NEVER","subscribe","className","classNames","ref","ReactDOM","render","document","getElementById"],"mappings":"gSAaMA,EAAmB,SAACC,GACxB,IAAMC,GAAM,IAAMC,KAAKC,MAAMH,EAAM,OAAOI,OAAO,GAC3CC,EAAaL,EAAM,KAEnBM,GAAM,IAAMJ,KAAKC,MAAME,EAAa,KAAKD,OAAO,GAGhDG,GAAM,IAFOF,EAAa,IAEFD,OAAO,GAErC,MAAM,GAAN,OAAUH,EAAV,YAAgBK,EAAhB,YAAsBC,IAwFTC,EArFH,WACV,IAAMC,EAAWC,IAAMC,OAAO,MACxBC,EAAWF,IAAMC,OAAO,MACxBE,EAAUH,IAAMC,OAAO,MACvBG,EAAWJ,IAAMC,OAAO,MAE9B,EAA8BI,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KA4CA,OA1CAC,qBAAU,WACR,IAAMC,EAASC,YAAUb,EAASc,QAAS,SAASC,KAClDC,YAAM,CAAEC,eAAe,KAEnBC,EAAQL,YAAUT,EAAQU,QAAS,SAASC,KAChDC,YAAM,CAAEC,eAAe,EAAOE,WAAY,KAEtCC,EAASP,YAAUV,EAASW,QAAS,YAAYC,KACrDM,aAAS,SAACC,GAAD,OAAOC,YAAS,QACzBP,YAAM,CAAEC,eAAe,KAEnBO,EAASX,YAAUR,EAASS,QAAS,SAASC,KAClDC,YAAM,CAAEC,eAAe,EAAME,WAAY,KA2B3C,OAxBeM,YAAMb,EAAQM,EAAOE,EAAQI,GAAQT,KAClDW,YAAU,CACRT,eAAe,EACfE,WAAY,IAEdQ,aAAK,SAACC,EAAOC,GAAR,mBAAC,eAAsBD,GAAUC,KAAS,IAC/CC,aAAI,SAACF,GACHpB,EAAWoB,EAAMT,YACjBT,EAAckB,EAAMX,kBAEtBc,aAAU,SAACH,GAAD,OACRA,EAAMX,cACFM,YAAS,KAAMR,KACbe,aAAI,SAACR,GAEH,OADAM,EAAMT,aACC,KAETW,aAAI,SAACR,GAAD,OAAOd,EAAWoB,EAAMT,gBAE9Ba,QAGDC,YAEA,eACN,IAGD,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,uBACA,sBAAMA,UAAU,QAAhB,SAAyB5C,EAAiBiB,KAC1C,sBAAK2B,UAAU,gBAAf,UACE,wBACEA,UAAWC,IACT,wBACA1B,GAAc,UAEhB2B,IAAKpC,EALP,mBASA,wBACEkC,UAAWC,IACT,yBACC1B,GAAc,UAEjB2B,IAAKhC,EALP,kBASA,wBAAQ8B,UAAU,wBAAwBE,IAAKjC,EAA/C,kBAGA,wBAAQ+B,UAAU,wBAAwBE,IAAK/B,EAA/C,0BChGRgC,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.e3cea765.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { interval, fromEvent, merge, NEVER } from \"rxjs\";\nimport {\n  switchMap,\n  scan,\n  tap,\n  startWith,\n  mapTo,\n  throttle,\n} from \"rxjs/operators\";\nimport classNames from \"classnames\";\nimport \"./styles/styles.scss\";\n\nconst getFormattedTime = (sec) => {\n  const hh = (\"0\" + Math.floor(sec / 3600)).slice(-2);\n  const remainderM = sec % 3600;\n\n  const mm = (\"0\" + Math.floor(remainderM / 60)).slice(-2);\n  const remainderS = remainderM % 60;\n\n  const ss = (\"0\" + remainderS).slice(-2);\n\n  return `${hh}:${mm}:${ss}`;\n};\n\nconst App = () => {\n  const startBtn = React.useRef(null);\n  const pauseBtn = React.useRef(null);\n  const stopBtn = React.useRef(null);\n  const resetBtn = React.useRef(null);\n\n  const [counter, setCounter] = useState(0);\n  const [isCounting, setIsCounting] = useState(false);\n\n  useEffect(() => {\n    const start$ = fromEvent(startBtn.current, \"click\").pipe(\n      mapTo({ newIsCounting: true })\n    );\n    const stop$ = fromEvent(stopBtn.current, \"click\").pipe(\n      mapTo({ newIsCounting: false, newCounter: 0 })\n    );\n    const pause$ = fromEvent(pauseBtn.current, \"dblclick\").pipe(\n      throttle((_) => interval(300)),\n      mapTo({ newIsCounting: false })\n    );\n    const reset$ = fromEvent(resetBtn.current, \"click\").pipe(\n      mapTo({ newIsCounting: true, newCounter: 0 })\n    );\n\n    const timer$ = merge(start$, stop$, pause$, reset$).pipe(\n      startWith({\n        newIsCounting: false,\n        newCounter: 0,\n      }),\n      scan((state, curr) => ({ ...state, ...curr }), {}),\n      tap((state) => {\n        setCounter(state.newCounter);\n        setIsCounting(state.newIsCounting);\n      }),\n      switchMap((state) =>\n        state.newIsCounting\n          ? interval(1000).pipe(\n              tap((_) => {\n                state.newCounter++;\n                return 1;\n              }),\n              tap((_) => setCounter(state.newCounter))\n            )\n          : NEVER\n      )\n    );\n    timer$.subscribe();\n\n    return () => {};\n  }, []);\n\n  return (\n    <div className=\"stopwatch\">\n      <h1 className=\"watchText\">StopWatch</h1>\n      <span className=\"timer\">{getFormattedTime(counter)}</span>\n      <div className=\"control-panel\">\n        <button\n          className={classNames(\n            \"control-panel__button\",\n            isCounting && \"hidden\"\n          )}\n          ref={startBtn}\n        >\n          Start\n        </button>\n        <button\n          className={classNames(\n            \"control-panel__button\",\n            !isCounting && \"hidden\"\n          )}\n          ref={stopBtn}\n        >\n          Stop\n        </button>\n        <button className=\"control-panel__button\" ref={pauseBtn}>\n          Wait\n        </button>\n        <button className=\"control-panel__button\" ref={resetBtn}>\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/styles.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}